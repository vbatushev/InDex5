var indexver = "5.4";

// Языковые параметры
var docAlertText = "Нет открытых публикаций. Откройте публикацию \nи запустите скрипт еще раз.";
var docAlertHead = "Ошибка: Нет открытых публикаций";
var docOpenDialogHead = "Выберите файл с данными";


function trim (str, charlist) { var whitespace, l = 0, i = 0; str += ''; if (!charlist) { whitespace = " \n\r\t\f\x0b\xa0\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u3000"; } else { charlist += ''; whitespace = charlist.replace(/([\[\]\(\)\.\?\/\*\{\}\+\$\^\:])/g, '$1'); } l = str.length; for (i = 0; i < l; i++) { if (whitespace.indexOf(str.charAt(i)) === -1) { str = str.substring(i); break; } } l = str.length; for (i = l - 1; i >= 0; i--) { if (whitespace.indexOf(str.charAt(i)) === -1) { str = str.substring(0, i + 1);break;}} return whitespace.indexOf(str.charAt(0)) === -1 ? str : ''; }

Object.prototype.indexFind = function (findArray, workIndex, fStyles, fcStyles, caseSens) {

	app.findGrepPreferences = null; app.changeGrepPreferences = null;
	var parentObject = workIndex;
	for (var fa = 0; fa < findArray.length; fa++) {

		if (!caseSens) { var ss = "(?i)"; } else { var ss = "";}
		
		var findStrings = trim(findArray[fa]);
		
		var fss = findStrings.split('=>');
		if (fss.length > 1) {
			var topicName = fss[0];
			var findString = fss[1];
		} else {
			var findString = findStrings;
			var topicName = findStrings;
		}
		
		findFindString = ss + findString;
		if (parentObject.topics.itemByName(topicName).isValid) {
			var parObject = parentObject.topics.itemByName(topicName);
		} else {
			var parObject = parentObject.topics.add(topicName);
			app.findGrepPreferences.findWhat = findFindString;
			var myFinds = this.findGrep(true);
			app.findGrepPreferences = null; app.changeGrepPreferences = null;
			if (myFinds) {
				for (f = 0; f < myFinds.length; f++) {
					myFinds[f].select(); var FindSelection = app.activeDocument.selection[0];
					if (fStyles == '') {
						for (cf = 0; cf < fcStyles.length; cf++) {
							if (FindSelection.appliedCharacterStyle == fcStyles[cf] || fcStyles[cf] == "") { 
								parObject.pageReferences.add(FindSelection, PageReferenceType.currentPage);
							}
						}
					} else {
						var test = false;
						for (tf = 0; tf < fStyles.length; tf++) {
							if (FindSelection.appliedParagraphStyle == fStyles[tf]) { test =true; }
							for (cf = 0; cf < fcStyles.length; cf++) {
								if (FindSelection.appliedCharacterStyle == fcStyles[cf] || fcStyles[cf] == "") { 
									test =true;
								} else {
									test = false;
								}
							}
						}
						if (test) {
							parObject.pageReferences.add(FindSelection, PageReferenceType.currentPage);
						}
					}
				}
			}
		}

		parentObject = parObject;
	}
}
